plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'


//java {
//	toolchain {
//		languageVersion = JavaLanguageVersion.of(23)
//	}
//}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'
//	implementation 'org.springframework.boot:spring-boot-starter-mysql'
//	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.h2database:h2'
	testImplementation ('org.springframework.boot:spring-boot-starter-test'){
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'software.amazon.awssdk:s3:2.20.79'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring security

	testImplementation 'org.springframework.security:spring-security-test'

//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}





tasks.named('test') {
	useJUnitPlatform()
}
//test {
//	jvmArgs += "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}"
//}


tasks.withType(JavaCompile).configureEach {
	options.compilerArgs << '-parameters'
}